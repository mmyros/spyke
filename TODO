GENERAL:

- interpolation

- have a log window at bottom that details everything going on behind the scenes
    - this could simply be an integrated pyshell window, so you can do things from command line instead of being forced to use interface
    - also, use it to examine and mess with internals, including wxpy internals

- keep spyke importable as a library, not just as a standalone program. This way, you can parse files, spike sort, etc directly from interpreter, or neuropy.

- need to look into just how complex and slow the (automated) sorting will be
    - can it all be done in pure Python?
    - start with manual template definition

- how hard will it be to generate highpass, lowpass, chartwindow, and fistogram widgets in wxpython?
    - email wxpython list on displaying time series data.
    - wxpy 2.8 should be faster, doesn't need to copy data, can use numpy data directly?
    - borrow something from MPL?

- spike (and lfp?) data need to be corrected for sample and hold (S+H) delay offsets
    - do this during interpolation as in Surfbawd?

- lfp data need to be corrected for offsets induced by low-pass filters
    - what are the spectral phase and amplitude characteristics of the filters?
    - Tim mentioned Hilbert transforms are useful for this
    - want to do CSDs as well - I guess these don't need to be filter offset corrected, since you're just comparing between lfp chans, not between lfp and spike chans

- can latest wxPy 2.8 can reuse numpy data w/o copy?


----------------------------------------------------
SPECIFICS:

- add parsing progress bar
- move simple matplotlib plot() method from Stream class to WaveForm class, that way, you no longer need to pass a trange argument
    - instead of:
        f.highpassstream.plot(chanis=None, trange=(135e6, 135.1e6))
      you'd slice instead:
        f.highpassstream[135e6:135.1e6].plot(chanis=None)
    - would have to add more stuff as attribs to WaveForm class, such as .records and .rts



----------------------------------------------------
DONE:

- move code to /spyke subfolder, make a setup.py in root, keep TODO in root
